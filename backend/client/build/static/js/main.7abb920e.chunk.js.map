{"version":3,"sources":["components/LastTen.js","assets/route.js","pages/Home.js","components/Header.js","components/FormData.js","components/EditConcept.js","components/EditAmount.js","components/EntryTable.js","components/EgressTable.js","pages/Operations.js","components/Footer.js","App.js","index.js"],"names":["LastTen","props","className","Table","hover","lastTen","length","Spinner","color","map","data","scope","date","type","concept","amount","route","Home","state","totalEntry","totalEgress","result","getRegistry","a","axios","get","response","registry","separator","balance","paramEntry","paramEgress","num","setState","arrEntry","arrEgress","push","slice","reverse","this","window","scrollTo","style","marginTop","dark","React","Component","Header","to","FormData","modal","disabled","toggle","getData","e","name","target","value","notify","toast","transition","Zoom","position","POSITION","BOTTOM_CENTER","hideProgressBar","delay","toRegister","preventDefault","alert","post","then","success","catch","error","marginLeft","Button","onClick","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","onChange","autoComplete","placeholder","ModalFooter","EditConcept","useState","toModify","setToModify","setConcept","modify","swal","sendModification","id","idToModify","put","defaultValue","icon","faEdit","EditAmount","setAmount","EntryTable","remove","idToRemove","delete","_id","title","text","buttons","dangerMode","willDelete","faTrash","EgressTable","Operations","Footer","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7abb920e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table, Spinner } from 'reactstrap';\r\nimport '../styles/home.css';\r\n\r\nconst LastTen = props => {\r\n\r\n    return ( \r\n\r\n        <div className=\"div-table-home\">\r\n            <div className=\"table-last-ten\">\r\n                <Table hover>\r\n                    <thead className=\"thead-list\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <th><p>Fecha</p></th>\r\n                            <th><p>Tipo</p></th>\r\n                            <th><p>Concepto</p></th>\r\n                            <th><p>Monto</p></th>\r\n                        </tr>\r\n                    </thead>\r\n                    { props.lastTen.length === 0 \r\n                        ? <Spinner color=\"info\" className=\"spinner-list\" />  \r\n                        : props.lastTen.map(data => {\r\n                            return (\r\n                                <tbody className=\"tbody-last-ten\">\r\n                                    <tr>\r\n                                        <th scope=\"row\"></th>\r\n                                        <td><p>{data.date}</p></td>\r\n                                        <td><p>{data.type}</p></td>\r\n                                        <td><p>{data.concept}</p></td>\r\n                                        <td><p>$ {data.amount}</p></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            )\r\n                        })\r\n                    }\r\n                </Table>\r\n            </div>\r\n        </div>\r\n     );\r\n};\r\n \r\nexport default LastTen;","\r\nconst route = \"https://mypersonalbudgets.herokuapp.com\"\r\n\r\nexport default route;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Spinner } from 'reactstrap';\r\nimport LastTen from '../components/LastTen';\r\nimport '../styles/home.css';\r\nimport route from '../assets/route'\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        totalEntry: 0,\r\n        totalEgress: 0,\r\n        result: 0,\r\n        lastTen: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getRegistry()\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    getRegistry = async () => {\r\n        const response = await axios.get(`${route}/api/registry`)\r\n        const data = response.data.registry\r\n        this.separator(data)\r\n        this.lastTen(data)\r\n    }\r\n\r\n    balance = (paramEntry, paramEgress) => {\r\n        let totalEntry = 0\r\n        let totalEgress = 0\r\n        paramEntry.map( num => totalEntry += num);\r\n        paramEgress.map( num => totalEgress += num);\r\n        this.setState({ \r\n            totalEntry, \r\n            totalEgress,\r\n            result: totalEntry - totalEgress\r\n        });\r\n    }\r\n    \r\n    separator = data => {\r\n        let arrEntry = []\r\n        let arrEgress = []\r\n        data.map( data => {\r\n            if(data.type === \"Ingreso\") {\r\n                return arrEntry.push(data.amount) \r\n            } else {\r\n                return arrEgress.push(data.amount)\r\n            }; \r\n        });\r\n        this.balance(arrEntry, arrEgress)\r\n    }\r\n\r\n    lastTen = async data => {\r\n        const lastTen = await data.slice(-10).reverse()  \r\n        this.setState({ lastTen })\r\n    }\r\n\r\n    render() { \r\n\r\n        if(this.state.result < 5000) {\r\n            var style = { color: '#ec1818' }\r\n        } else {\r\n            style = { color: '#56ff91' }\r\n        }\r\n\r\n        return ( \r\n            <>  \r\n            <div style={{ marginTop: '15vh' }}>\r\n                <div className=\"table-container\">\r\n                    <h3>Balance actual</h3>\r\n                    <hr className='row-line-balance' />\r\n                    <Table dark className=\"balance\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th></th>\r\n                            <th><p>Ingresos</p></th>\r\n                            <th><p>Gastos</p></th>\r\n                            <th><p>Resultante</p></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr className=\"tr-balance-table\">\r\n                            <th scope=\"row\"></th>\r\n                            <td>\r\n                                { !this.state.totalEntry ? <Spinner color=\"info\" /> : `$ ${this.state.totalEntry}` }\r\n                            </td>\r\n                            <td>\r\n                                { !this.state.totalEgress ? <Spinner color=\"info\" /> : `$ ${this.state.totalEgress}` }\r\n                            </td>\r\n                            <td style={style}>\r\n                                { !this.state.result ? <Spinner color=\"info\" /> : `$ ${this.state.result}` }\r\n                            </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div>\r\n                    <hr className='row-line' />\r\n                    <div className=\"div-title\">\r\n                        <h3>Últimos registros</h3>\r\n                    </div>\r\n                   <LastTen lastTen={this.state.lastTen} />\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    };\r\n};\r\n \r\nexport default Home;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/header.css';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"header\">\r\n                <h1 className=\"logo\">Mis presupuestos</h1>\r\n                <div className=\"header-right\">\r\n                    <NavLink className=\"menu\" to=\"/\" >Home</NavLink>\r\n                    <NavLink className=\"menu\" to='/operations' >Operaciones</NavLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {    \r\n    Button, Modal, ModalHeader, ModalBody, \r\n    ModalFooter, FormGroup, Label, Input, Form\r\n} from 'reactstrap';\r\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport '../styles/operations.css';\r\nimport route from '../assets/route'\r\n\r\n\r\nclass FormData extends React.Component {\r\n    \r\n    state = { \r\n        modal: false,\r\n        type: \"\",\r\n        concept: \"\",\r\n        amount: 0,\r\n        date: \"\",\r\n        disabled: false\r\n    }\r\n    \r\n    toggle = () => {\r\n        this.setState({ \r\n            modal: !this.state.modal,\r\n            disabled: false \r\n        });\r\n    }\r\n\r\n    getData = e => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        this.setState({\r\n            [name] : value\r\n        }); \r\n    }\r\n\r\n    notify = () => {\r\n        toast.dark(\r\n            <h4 className=\"toast-text\">Datos registrados correctamente</h4>,\r\n            {   \r\n                transition: Zoom,\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                hideProgressBar: true,\r\n                delay: 500\r\n            }\r\n        );\r\n    }\r\n\r\n    toRegister = async e => {\r\n        e.preventDefault()\r\n        this.setState({ disabled: !this.state.disabled });\r\n\r\n        // Easy verify\r\n        const { type, concept, amount, date } = this.state\r\n        if( type === '' || concept === '' || amount === \"\" || date === '' ) {\r\n            alert(\"Hay datos incompletos\")\r\n            this.setState({ disabled: false })\r\n        } else {\r\n            const registry = {\r\n                type: this.state.type,\r\n                concept: this.state.concept,\r\n                amount: this.state.amount,\r\n                date: this.state.date\r\n            }\r\n\r\n            // Send data through axios request\r\n            await axios.post(`${route}/api/registry`, registry)\r\n            .then( async response => {\r\n                if(response.data.success === true) {\r\n                    await this.setState({ modal: !this.state.modal })\r\n                    this.notify()\r\n                    this.setState({\r\n                        type: '', \r\n                        concept: '', \r\n                        amount: 0, \r\n                        date: '',\r\n                    });\r\n                    this.props.getRegistry()\r\n                }  \r\n            })\r\n            .catch(error => {\r\n                alert('Hubo un problema al intentar cargar los datos')\r\n                this.setState({\r\n                    type: '', \r\n                    concept: '', \r\n                    amount: 0, \r\n                    date: '',\r\n                    disabled: !this.state.disabled \r\n                });\r\n                this.toggle()\r\n            });\r\n        };\r\n    }\r\n\r\n    render() { \r\n\r\n        return ( \r\n            <>\r\n                <div style={{ marginLeft: '2rem' }}>\r\n                    <Button \r\n                        className=\"buttonForm\" \r\n                        color=\"danger\" \r\n                        onClick={this.toggle}\r\n                    >   \r\n                        <h6>cargar nueva operación</h6>\r\n                    </Button>\r\n                    <Modal \r\n                        isOpen={this.state.modal} \r\n                        toggle={this.toggle} \r\n                        className=\"modal-form\"\r\n                    >\r\n                        <ModalHeader toggle={this.toggle}>Formulario de operaciones</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Label for=\"type\" className=\"label-form\">Tipo</Label>\r\n                                    <Input \r\n                                        type=\"select\" \r\n                                        name=\"type\" \r\n                                        onChange={this.getData}\r\n                                    >\r\n                                        <option>--Selecciona una operación--</option>\r\n                                        <option name=\"Ingreso\">Ingreso</option>\r\n                                        <option name=\"Egreso\">Egreso</option>\r\n                                    </Input>\r\n\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"concept\" className=\"label-form\">Concepto</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"concept\" \r\n                                        autoComplete=\"off\" \r\n                                        onChange={this.getData}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"amount\" className=\"label-form\">Monto</Label>\r\n                                    <Input \r\n                                        type=\"number\" \r\n                                        name=\"amount\" \r\n                                        placeholder=\"$\" \r\n                                        onChange={this.getData}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"date\" className=\"label-form\">Fecha</Label>\r\n                                    <Input \r\n                                        type=\"date\" \r\n                                        name=\"date\" \r\n                                        onChange={this.getData} \r\n                                    />\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button \r\n                                className=\"button-modal\"\r\n                                color=\"primary\" \r\n                                disabled={this.state.disabled} \r\n                                onClick={this.toRegister}\r\n                            >\r\n                                Registrar\r\n                            </Button>\r\n                            <Button \r\n                                className=\"button-modal\"\r\n                                color=\"secondary\" \r\n                                onClick={this.toggle}\r\n                            >\r\n                                Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n                <div>\r\n                    <ToastContainer className=\"toast-container\" />\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n};\r\n \r\nexport default FormData;","import React, { useState } from 'react';\r\nimport { Button, FormGroup, Input } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport '../styles/operations.css';\r\nimport route from '../assets/route'\r\n\r\nconst EditConcept = props => {\r\n\r\n    const [toModify, setToModify] = useState(false)\r\n\r\n    const [concept, setConcept] = useState(\"\")\r\n\r\n    const modify = async () => {\r\n        setToModify(true)\r\n    }\r\n\r\n    const captureEvent = e => {\r\n        const value = e.target.value\r\n        setConcept(value)\r\n    }\r\n\r\n    const notify = async () => {\r\n        setToModify(false)\r\n        await props.getRegistry()\r\n        swal(\"Accion completada\", \"Concepto modificado correctamente\", \"success\");        \r\n    }\r\n\r\n    const err = () => swal(\"Ocurrió un error\", \"no se pudo concretar la modificación\", \"error\");\r\n\r\n    const sendModification = async (id, data) => {\r\n        const idToModify = id\r\n        if(concept === \"\") {\r\n            alert(`No se ha modificado el concepto ${data}`)\r\n        } else {\r\n            const response = await axios.put(`${route}/api/modify/concept/${idToModify}`, { concept: concept })\r\n            response.data.success === true ? notify() : err()    \r\n        };\r\n    }\r\n\r\n    const cancel = () => setToModify(false)\r\n\r\n    return (\r\n        <>\r\n            <td>\r\n                {!toModify\r\n                    ? <p>{props.data}</p>\r\n                    : <FormGroup>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"concept\"\r\n                            autoComplete=\"off\"\r\n                            onChange={captureEvent}\r\n                            defaultValue={props.data}\r\n                        />\r\n                        <div className=\"modify\">\r\n                            <Button onClick={() => sendModification(props.id, props.data)}>\r\n                                Modificar\r\n                            </Button>\r\n                            <Button onClick={cancel} >\r\n                                Cancelar\r\n                            </Button>\r\n                        </div>\r\n                    </FormGroup>\r\n                }\r\n                <FontAwesomeIcon\r\n                    className=\"icon\"\r\n                    icon={faEdit}\r\n                    onClick={modify}\r\n                />\r\n            </td>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditConcept;","import React, { useState } from 'react';\r\nimport { FormGroup, Input, Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport '../styles/operations.css';\r\nimport route from '../assets/route'\r\n\r\nconst EditAmount = props => {\r\n\r\n    const [toModify, setToModify] = useState(false)\r\n\r\n    const [amount, setAmount] = useState(0)\r\n\r\n    const modify = () => {\r\n        setToModify(true)\r\n    }\r\n\r\n    const captureEvent = e => {\r\n        const value = e.target.value\r\n        setAmount(value)\r\n    }\r\n\r\n    const notify = async () => {\r\n        setToModify(false)\r\n        await props.getRegistry()\r\n        swal(\"Accion completada\", \"Monto modificado correctamente\", \"success\");\r\n    }\r\n\r\n    const err = () => swal(\"Ocurrió un error\", \"no se pudo concretar la modificación\", \"error\");\r\n\r\n    const sendModification = async (id, data) => {\r\n        const idToModify = id\r\n        if(amount === 0) {\r\n            alert(`No se ha modificado el monto ${data}`)\r\n        } else {\r\n            const response = await axios.put(`${route}/api/modify/amount/${idToModify}`, { amount: amount })\r\n            response.data.success === true ? notify() : err()    \r\n        };\r\n    }\r\n\r\n    const cancel = () => setToModify(false)\r\n\r\n    return (\r\n        <td>\r\n            {!toModify\r\n                ? <p>$ {props.data}</p>\r\n                : <FormGroup>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"amount\"\r\n                        autoComplete=\"off\"\r\n                        onChange={captureEvent}\r\n                        defaultValue={props.data}\r\n                    />\r\n                    <div className=\"modify\">\r\n                        <Button onClick={() => sendModification(props.id, props.data)}>\r\n                            Modificar\r\n                        </Button>\r\n                        <Button onClick={cancel} >\r\n                            Cancelar\r\n                        </Button>\r\n                    </div>\r\n                </FormGroup>\r\n            }\r\n            <FontAwesomeIcon\r\n                className=\"icon\"\r\n                icon={faEdit}\r\n                onClick={modify}\r\n            />\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default EditAmount;","import React from 'react';\r\nimport { Table, Spinner } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport route from '../assets/route';\r\nimport EditConcept from './EditConcept';\r\nimport EditAmount from './EditAmount';\r\nimport '../styles/operations.css';\r\n\r\nconst EntryTable = props => {\r\n\r\n    const alertswal = id => {\r\n        swal({\r\n            title: \"¿Eliminar del registro?\",\r\n            text: \"No podrá recuperar los datos una ves realizada la acción!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    remove(id)\r\n                    swal(\"Los datos fueron eliminados correctamente\", {\r\n                        icon: \"success\",\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Sus datos fueron conservados\");\r\n                };\r\n            });\r\n    }\r\n\r\n    const remove = async id => {\r\n        const idToRemove = id\r\n        const response = await axios.delete(`${route}/api/registry/${idToRemove}`)\r\n        if (response.data.success) props.getRegistry();\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"div-entry-table\">\r\n            <Table dark>\r\n                <thead>\r\n                    <tr className=\"tr-table\">\r\n                        <th></th>\r\n                        <th><p>Fecha</p></th>\r\n                        <th><p>Tipo</p></th>\r\n                        <th><p>Concepto</p></th>\r\n                        <th><p>Monto</p></th>\r\n                    </tr>\r\n                </thead>\r\n                {props.data.length === 0\r\n                    ? <Spinner color=\"info\" className=\"spinner-table\" />\r\n                    : props.data.map(data => {\r\n                        if (data.type === \"Ingreso\") {\r\n                            return (\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th scope=\"row\">\r\n                                            <button\r\n                                                className=\"button-remove\"\r\n                                                onClick={() => alertswal(data._id)}\r\n                                            >\r\n                                                <FontAwesomeIcon\r\n                                                    className=\"icon\"\r\n                                                    icon={faTrash}\r\n                                                />\r\n                                            </button>\r\n                                        </th>\r\n                                        <td><p>{data.date}</p></td>\r\n                                        <td><p>{data.type}</p></td>\r\n                                        <EditConcept\r\n                                            getRegistry={props.getRegistry}\r\n                                            id={data._id}\r\n                                            data={data.concept}\r\n                                        />\r\n                                        <EditAmount\r\n                                            getRegistry={props.getRegistry}\r\n                                            id={data._id}\r\n                                            data={data.amount}\r\n                                        />\r\n                                    </tr>\r\n                                </tbody>\r\n                            )\r\n                        } else return null\r\n                    })\r\n                }\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EntryTable;\r\n","import React from 'react';\r\nimport { Table, Spinner } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios'\r\nimport '../styles/operations.css';\r\nimport EditConcept from './EditConcept';\r\nimport EditAmount from './EditAmount';\r\nimport route from '../assets/route';\r\n\r\n\r\nconst EgressTable = props => {\r\n\r\n    const alertswal = id => {\r\n        swal({\r\n            title: \"¿Eliminar del registro?\",\r\n            text: \"No podrá recuperar los datos una ves realizada la acción!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n\r\n                    // Call function to delete\r\n                    remove(id)\r\n                    swal(\"Los datos fueron eliminados correctamente\", {\r\n                        icon: \"success\",\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Sus datos fueron conservados\");\r\n                }\r\n            });\r\n    }\r\n\r\n    const remove = async id => {\r\n        const idToRemove = id\r\n        const response = await axios.delete(`${route}/api/registry/${idToRemove}`)\r\n        if (response.data.success) props.getRegistry()\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"div-egress-table\">\r\n            <Table dark>\r\n                <thead>\r\n                    <tr className=\"tr-table\">\r\n                        <th></th>\r\n                        <th><p>Fecha</p></th>\r\n                        <th><p>Tipo</p></th>\r\n                        <th><p>Concepto</p></th>\r\n                        <th><p>Monto</p></th>\r\n                    </tr>\r\n                </thead>\r\n                {props.data.length === 0\r\n                    ? <Spinner color=\"info\" className=\"spinner-table\" />\r\n                    : props.data.map(data => {\r\n                        if (data.type === \"Egreso\") {\r\n                            return (\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th scope=\"row\">\r\n                                            <button\r\n                                                className=\"button-remove\"\r\n                                                onClick={() => alertswal(data._id)}\r\n                                            >\r\n                                                <FontAwesomeIcon\r\n                                                    className=\"icon\"\r\n                                                    icon={faTrash}\r\n                                                />\r\n                                            </button>\r\n                                        </th>\r\n                                        <td><p>{data.date}</p></td>\r\n                                        <td><p>{data.type}</p></td>\r\n                                        <EditConcept\r\n                                            getRegistry={props.getRegistry}\r\n                                            id={data._id}\r\n                                            data={data.concept}\r\n                                        />\r\n                                        <EditAmount\r\n                                            getRegistry={props.getRegistry}\r\n                                            id={data._id}\r\n                                            data={data.amount}\r\n                                        />\r\n                                    </tr>\r\n                                </tbody>\r\n                            )\r\n                        } else return null\r\n                    })\r\n                }\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EgressTable;","import React from 'react';\r\nimport axios from 'axios';\r\nimport FormData from '../components/FormData';\r\nimport EntryTable from '../components/EntryTable';\r\nimport EgressTable from '../components/EgressTable';\r\nimport '../styles/operations.css';\r\nimport route from '../assets/route';\r\n\r\nclass Operations extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getRegistry()\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    getRegistry = async () => {\r\n        const response = await axios.get(`${route}/api/registry`)\r\n        const data = response.data.registry\r\n        this.setState({ data })\r\n    }\r\n    \r\n    render() { \r\n\r\n        return ( \r\n            <>\r\n                <div style={{ marginTop: '20vh' }}>\r\n                    <FormData getRegistry={this.getRegistry} />\r\n                    <div className=\"table-main-container\">\r\n                        <EntryTable \r\n                            data={this.state.data} \r\n                            getRegistry={this.getRegistry} \r\n                        />\r\n                        <EgressTable \r\n                            data={this.state.data} \r\n                            getRegistry={this.getRegistry} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n};\r\n \r\nexport default Operations;","import React from 'react';\r\nimport '../styles/app.css';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <div className=\"footer\">\r\n            <p>© 2020 | Derechos Reservados</p>\r\n        </div>\r\n     );\r\n};\r\n \r\nexport default Footer;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Header from './components/Header';\nimport Operations from './pages/Operations';\nimport Footer from './components/Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/app.css';\n\nfunction App() {\n  \n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/operations\" component={Operations} />\n        <Redirect to=\"/\" />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}